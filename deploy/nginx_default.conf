gzip on;

server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;
	return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/xiaolisong.cn/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/xiaolisong.cn/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    server_name  xiaolisong.cn;

    #charset koi8-r;
    access_log  /dev/null  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    error_page  403 404   /40x.html;
	location = /40x.html {
        root   /usr/share/nginx/html;
    }
	
    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
	
	# Redirect non-https traffic to https
	if ($scheme != "https") {
		return 301 https://$host$request_uri;
	} # managed by Certbot
}
